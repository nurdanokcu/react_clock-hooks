{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockName","useState","Date","time","setTime","prevClockName","setPrevClockName","useEffect","timerId","window","setInterval","newTime","console","info","toUTCString","slice","clearInterval","debug","className","App","setClockName","hasClock","setHasClock","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oLAOaA,EAAwB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtC,EAAwBC,mBAAS,IAAIC,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CH,mBAASD,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAuBA,OArBAC,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjC,IAAMC,EAAU,IAAIT,KAEpBU,QAAQC,KAAKF,EAAQG,cAAcC,OAAO,IAAK,IAE/CX,EAAQO,KACP,KAEH,OAAO,WACLF,OAAOO,cAAcR,MAEtB,IAEHD,qBAAU,WACJF,IAAkBL,IACpBY,QAAQK,MAAR,qBAA4BjB,IAC5BM,EAAiBN,MAElB,CAACA,IAGF,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGlB,IAGF,YAED,sBAAMkB,UAAU,cAAhB,SACGf,EAAKW,cAAcC,OAAO,IAAK,SC/BjC,IAAMI,EAAgB,WAC3B,MAAkClB,mBAAS,WAA3C,mBAAOD,EAAP,KAAkBoB,EAAlB,KACA,EAAgCnB,oBAAS,GAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SAACC,GACxBA,EAAMC,iBACNH,GAAY,IAGRI,EAAkB,WACtBJ,GAAY,IAmBd,OAhBAf,qBAAU,WACRoB,SAASC,iBAAiB,cAAeL,GACzCI,SAASC,iBAAiB,QAASF,GAEnC,IAAMlB,EAAUC,OAAOC,aAAY,WACjCU,EAxBN,WACE,IAAMS,EAAQ3B,KAAK4B,MAAMC,WAAWhB,OAAO,GAE3C,MAAM,SAAN,OAAgBc,GAqBCG,MACZ,MAEH,OAAO,WACLL,SAASM,oBAAoB,cAAeV,GAC5CI,SAASM,oBAAoB,QAASP,GAEtCjB,OAAOO,cAAcR,MAEtB,IAGD,sBAAKU,UAAU,MAAf,UACE,6CACCG,GACC,cAAC,EAAD,CAAOrB,UAAWA,QCxC1BkC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,U","file":"static/js/main.80526705.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\nexport const Clock:React.FC<Props> = ({ clockName }) => {\n  const [time, setTime] = useState(new Date());\n  const [prevClockName, setPrevClockName] = useState(clockName);\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      const newTime = new Date();\n\n      console.info(newTime.toUTCString().slice(-12, -4));\n\n      setTime(newTime);\n    }, 1000);\n\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (prevClockName !== clockName) {\n      console.debug(`Renamed to ${clockName}`);\n      setPrevClockName(clockName);\n    }\n  }, [clockName]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {time.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('Clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  const handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    setHasClock(false);\n  };\n\n  const handleLeftClick = () => {\n    setHasClock(true);\n  };\n\n  useEffect(() => {\n    document.addEventListener('contextmenu', handleRightClick);\n    document.addEventListener('click', handleLeftClick);\n\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    return () => {\n      document.removeEventListener('contextmenu', handleRightClick);\n      document.removeEventListener('click', handleLeftClick);\n\n      window.clearInterval(timerId);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n      {hasClock && (\n        <Clock clockName={clockName} />\n      )}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}